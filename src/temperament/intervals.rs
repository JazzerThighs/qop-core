use lazy_static::lazy_static;

pub fn nth_harmonic(fundamental: f64, n: usize) -> Option<(f64, f64)> {
    // returns harmonic value normalized to fundamental..=octave, and value.
    if n != 0 {
        let value: f64 = fundamental * n as f64;
        let mut normalized = value.clone();
        while normalized > 2.0 * fundamental {
            normalized /= 2.0;
        }
        Some((normalized, value))
    } else {
        None
    }
}

pub fn nth_subharmonic(fundamental: f64, n: usize) -> Option<(f64, f64)> {
    // returns subharmonic value normalized to fundamental..=octave, and value.
    if n != 0 {
        let value: f64 = fundamental / n as f64;
        let mut normalized = value.clone();
        while normalized < fundamental {
            normalized *= 2.0;
        }
        Some((normalized, value))
    } else {
        None
    }
}

pub fn closest_wiki_microtonal_interval(alpha: f64, beta: f64) -> (usize, usize) {
    // alpha && beta: 0 < alpha, beta < Infinity 
    // returns index of closest normalized interval found in WIKI_MICROTONAL_INTERVALS, and amount of octaves above the fundamental.
    let (bottom, top) = if alpha <= beta { (alpha, beta) } else { (beta, alpha) };
    let mut arg_interval = top / bottom;
    let mut octave_displacement = 0;
    while arg_interval > 2.0 {
        arg_interval /= 2.0;
        octave_displacement += 1;
    }
    let mut result: usize = 0;
    for test in 0..WIKI_MICROTONAL_INTERVALS.len() {
        if (WIKI_MICROTONAL_INTERVALS[test].hz_ratio - arg_interval).abs()
            < (WIKI_MICROTONAL_INTERVALS[result].hz_ratio - arg_interval).abs()
        {
            result = test;
        }
    }
    (result, octave_displacement)
}

pub struct WikiInterval {
    name: String,
    hz_ratio: f64,
    cents_above_fundamental: f64,
}

macro_rules! wiki_interval_input {
    [ $( ($name:expr, $hz:expr) ),+ $(,)? ] => {{
        const CENTS_IN_OCTAVE: f64 = 1200.0;
        let mut intervals = Vec::new();
        $(
            intervals.push(WikiInterval {
                name: $name.to_string(),
                hz_ratio: $hz,
                cents_above_fundamental: CENTS_IN_OCTAVE * $hz.log2(),
            });
        )+
        intervals
    }};
}

lazy_static! {
    pub static ref WIKI_MICROTONAL_INTERVALS: Vec<WikiInterval> = wiki_interval_input![
        ("Unison, monophony, perfect prime, tonic, or fundamental", 1_f64),
        ("Sixty-five-thousand-five-hundred-thirty-seventh harmonic", 65537_f64 / 65536_f64),
        ("Ragisma", 4375_f64 / 4374_f64),
        ("Breedsma", 2401_f64 / 2400_f64),
        ("Cent", (2_f64).powf(1_f64 / 1200_f64)),
        ("Millioctave", (2_f64).powf(1_f64 / 1000_f64)),
        ("Schisma", 32805_f64 / 32768_f64),
        ("Grad, Werckmeister", 3_f64 / (2_f64 / ((2_f64).powf(7_f64 / 12_f64)))),
        ("Savart or eptaméride", (10_f64).powf(1_f64 / 1000_f64)),
        ("Septimal kleisma, marvel comma", 225_f64 / 224_f64),
        ("Kleisma or semicomma majeur", 15625_f64 / 15552_f64),
        ("Semicomma, Fokker's comma", 2109375_f64 / 2097152_f64),
        ("Difference between 5:3 & 53:32", 160_f64 / 159_f64),
        ("Difference between 29:16 & 9:5", 145_f64 / 144_f64),
        ("Sixteenth tone", (2_f64).powf(1_f64 / 96_f64)),
        ("Orwell comma", 1728_f64 / 1715_f64),
        ("Hundred-twenty-ninth harmonic", 129_f64 / 128_f64),
        ("Small septimal semicomma, small septimal comma, starling comma", 126_f64 / 125_f64),
        ("Undecimal seconds comma", 121_f64 / 120_f64),
        ("1 step in 72 equal temperament", (2_f64).powf(1_f64 / 72_f64)),
        ("Difference between 19:16 & 6:5", 96_f64 / 95_f64),
        ("Diaschisma, minor comma", 2048_f64 / 2025_f64),
        ("Syntonic comma, major comma, komma, chromatic diesis, or comma of Didymus", 81_f64 / 80_f64),
        ("Holdrian comma, Holder's comma, 1 step in 53 equal temperament", (2_f64).powf(1_f64 / 53_f64)),
        ("Pythagorean comma, ditonic comma", 531441_f64 / 524288_f64),
        ("Eighth tone", (2_f64).powf(1_f64 / 48_f64)),
        ("Sixty-fifth harmonic, 13th-partial chroma", 65_f64 / 64_f64),
        ("Septimal comma, Archytas' comma, 63rd subharmonic", 64_f64 / 63_f64),
        ("1 step in 41 equal temperament", (2_f64).powf(1_f64 / 41_f64)),
        ("Undecimal diesis, Ptolemy's enharmonic: difference between (11 : 8) and (7 : 5) tritone", 56_f64 / 55_f64),
        ("Sixth tone", (2_f64).powf(1_f64 / 36_f64)),
        ("Difference between 17:16 & 25:24", 51_f64 / 50_f64),
        ("Septimal sixth tone or jubilisma, Erlich's decatonic comma or tritonic diesis", 50_f64 / 49_f64),
        ("Septimal diesis, slendro diesis or septimal 1/6-tone", 49_f64 / 48_f64),
        ("Inferior quarter tone, difference between 23:16 & 45:32", 46_f64 / 45_f64),
        ("1 step in 31 equal temperament or Normal Diesis", (2_f64).powf(1_f64 / 31_f64)),
        ("Undecimal diesis or undecimal fifth tone ", 45_f64 / 44_f64),
        ("Fifth tone", (2_f64).powf(1_f64 / 30_f64)),
        ("Enharmonic diesis or 5-limit limma, minor diesis, diminished second, minor diesis or diesis, 125th subharmonic", 128_f64 / 125_f64),
        ("Lesser 41-limit fifth tone", 42_f64 / 41_f64),
        ("Greater 41-limit fifth tone", 41_f64 / 40_f64),
        ("Tridecimal fifth tone", 40_f64 / 39_f64),
        ("Superior quarter-tone, novendecimal fifth tone", 39_f64 / 38_f64),
        ("Lesser 37-limit quarter tone", 38_f64 / 37_f64),
        ("Greater 37-limit quarter tone", 37_f64 / 36_f64),
        ("Septimal quarter tone, septimal diesis, septimal chroma, superior quarter tone", 36_f64 / 35_f64),
        ("Just quarter tone", 246_f64 / 239_f64),
        ("Equal-tempered quarter tone", (2_f64).powf(1_f64 / 24_f64)),
        ("ET quarter-tone approximation, lesser 17-limit quarter tone", 35_f64 / 34_f64),
        ("Harrison's comma (10 P5s - 1 H7)", 59049_f64 / 57344_f64),
        ("Greater 17-limit quarter tone", 34_f64 / 33_f64),
        ("Thirty-third harmonic, undecimal comma, undecimal quarter tone", 33_f64 / 32_f64),
        ("Inferior quarter-tone, thirty-first subharmonic", 32_f64 / 31_f64),
        ("Five-hundred-twenty-ninth harmonic", 529_f64 / 512_f64),
        ("Greater quarter-tone, difference between 31:16 & 15:8", 31_f64 / 30_f64),
        ("Lesser 29-limit quarter tone", 30_f64 / 29_f64),
        ("Greater 29-limit quarter tone", 29_f64 / 28_f64),
        ("Septimal minor second, small minor second, inferior quarter tone", 28_f64 / 27_f64),
        ("Beta scale step", (3_f64 / 2_f64).powf(1_f64 / 11_f64)),
        ("Chromatic diesis, tridecimal comma", 27_f64 / 26_f64),
        ("One-hundred-thirty-third harmonic", 133_f64 / 128_f64),
        ("Third tone", (2_f64).powf(1_f64 / 18_f64)),
        ("Tridecimal third tone, third tone", 26_f64 / 25_f64),
        ("Just chromatic semitone or minor chroma, lesser chromatic semitone, small (just) semitone or minor second, minor chromatic semitone, or minor semitone, 2⁄7-comma meantone chromatic semitone, augmented unison", 25_f64 / 24_f64),
        ("Lesser 23-limit semitone", 24_f64 / 23_f64),
        ("1 step in 16 equal temperament, 3 steps in 48", (2_f64).powf(1_f64 / 16_f64)),
        ("Greater 23-limit semitone", 23_f64 / 22_f64),
        ("Alpha scale step", (3_f64 / 2_f64).powf(1_f64 / 9_f64)),
        ("Sixty-seventh harmonic", 67_f64 / 64_f64),
        ("Hard semitone, two-fifth tone small semitone", 22_f64 / 21_f64),
        ("Septimal chromatic semitone, minor semitone", 21_f64 / 20_f64),
        ("Novendecimal augmented unison", 20_f64 / 19_f64),
        ("Pythagorean minor second or limma, Pythagorean diatonic semitone, Low Semitone", 256_f64 / 243_f64),
        ("Greater chromatic semitone, chromatic semitone, semitone medius, major chroma or major limma, small limma, major chromatic semitone, limma ascendant", 135_f64 / 128_f64),
        ("Novendecimal minor second", 19_f64 / 18_f64),
        ("121st subharmonic, undecimal minor second", 128_f64 / 121_f64),
        ("Just minor semitone, Arabic lute index finger", 18_f64 / 17_f64),
        ("Equal-tempered minor second or semitone", (2_f64).powf(1_f64 / 12_f64)),
        ("Minor diatonic semitone, just major semitone, overtone semitone, 17th harmonic, limma", 17_f64 / 16_f64),
        ("Studie II interval (compound just major third, 5:1, divided into 25 equal parts)", 5_f64.powf(1_f64 / 25_f64)),
        ("Just minor second, just diatonic semitone, large just semitone or major second, major semitone, limma, minor diatonic semitone, diatonic second semitone, diatonic semitone, 1⁄6-comma meantone minor second", 16_f64 / 15_f64),
        ("Apotome or Pythagorean major semitone, Pythagorean augmented unison, Pythagorean chromatic semitone, or Pythagorean apotome", 2187_f64 / 2048_f64),
        ("Secor", (18_f64 / 5_f64).powf(1_f64 / 19_f64)),
        ("Septimal diatonic semitone, major diatonic semitone, Cowell semitone", 15_f64 / 14_f64),
        ("5 steps in 48 equal temperament", (2_f64).powf(5_f64 / 48_f64)),
        ("Lesser tridecimal 2/3-tone", 14_f64 / 13_f64),
        ("Sixty-ninth harmonic", 69_f64 / 64_f64),
        ("Semitone maximus, minor second, large limma or Bohlen-Pierce small semitone, high semitone, alternate Renaissance half-step, large limma, acute minor second", 27_f64 / 25_f64),
        ("Two-third tone", (2_f64).powf(1_f64 / 9_f64)),
        ("Greater tridecimal 2/3-tone, Three-quarter tone", 13_f64 / 12_f64),
        ("Equal-tempered neutral second", (2_f64).powf(3_f64 / 24_f64)),
        ("3⁄4 tone or Undecimal neutral second, trumpet three-quarter tone, middle finger [between frets]", 12_f64 / 11_f64),
        ("Thirty-fifth harmonic", 35_f64 / 32_f64),
        ("Grave whole tone, neutral second, grave major second", 800_f64 / 729_f64),
        ("Greater undecimal minor/major/neutral second, 4/5-tone or Ptolemy's second", 11_f64 / 10_f64),
        ("1 step in 7 equal temperament", (2_f64).powf(1_f64 / 7_f64)),
        ("7 steps in 48 equal temperament", (2_f64).powf(7_f64 / 48_f64)),
        ("Seventy-first harmonic", 71_f64 / 64_f64),
        ("Pythagorean diminished third, Pythagorean minor tone", 65536_f64 / 59049_f64),
        ("Small just whole tone or major second, minor whole tone, lesser whole tone, minor tone, minor second, half-comma meantone major second", 10_f64 / 9_f64),
        ("Equal-tempered major second", (2_f64).powf(2_f64 / 12_f64)),
        ("Pythagorean major second, Large just whole tone or major second (sesquioctavan), tonus, major whole tone, greater whole tone, major tone", 9_f64 / 8_f64),
        ("Hundred-forty-fifth harmonic", 145_f64 / 128_f64),
        ("Just diminished third, 225th subharmonic", 256_f64 / 225_f64),
        ("9 steps in 48 equal temperament", (2_f64).powf(3_f64 / 16_f64)),
        ("Seventy-third harmonic", 73_f64 / 64_f64),
        ("Septimal major second, septimal whole tone", 8_f64 / 7_f64),
        ("1 step in 5 equal temperament", (2_f64).powf(1_f64 / 5_f64)),
        ("Tridecimal 5⁄4 tone", 15_f64 / 13_f64),
        ("5 steps in 24 equal temperament", (2_f64).powf(5_f64 / 24_f64)),
        ("Thirty-seventh harmonic", 37_f64 / 32_f64),
        ("Semi-augmented whole tone, semi-augmented second", 125_f64 / 108_f64),
        ("55th subharmonic", 64_f64 / 55_f64),
        ("Septimal minor third or Sub minor third", 7_f64 / 6_f64),
        ("Two-hundred-ninety-ninth harmonic", 299_f64 / 256_f64),
        ("Just augmented second, Augmented tone, augmented second", 75_f64 / 64_f64),
        ("11 steps in 48 equal temperament", (2_f64).powf(11_f64 / 48_f64)),
        ("Tridecimal minor third", 13_f64 / 11_f64),
        ("Pythagorean minor third semiditone, or 27th subharmonic", 32_f64 / 27_f64),
        ("19th harmonic, 19-limit minor third, overtone minor third", 19_f64 / 16_f64),
        ("Equal-tempered minor third", (2_f64).powf(3_f64 / 12_f64)),
        ("Quasi-equal-tempered minor third, 2nd 7-limit minor third, Bohlen-Pierce second", 25_f64 / 21_f64),
        ("Quarter-comma meantone minor third", 6_f64 / (5_f64 / (81_f64 / 80_f64).powf(1_f64 / 4_f64))),
        ("Alpha scale minor third", (3_f64 / 2_f64).powf(4_f64 / 9_f64)),
        ("Just minor third, minor third, 1⁄3-comma meantone minor third", 6_f64 / 5_f64),
        ("Pythagorean augmented second", 19683_f64 / 16384_f64),
        ("Seventy-seventh harmonic", 77_f64 / 64_f64),
        ("13 steps in 48 equal temperament", (2_f64).powf(13_f64 / 48_f64)),
        ("Superminor third", 17_f64 / 14_f64),
        ("Acute minor third", 243_f64 / 200_f64),
        ("Thirty-ninth harmonic", 39_f64 / 32_f64),
        ("2 steps in 7 equal temperament", (2_f64).powf(2_f64 / 7_f64)),
        ("105th subharmonic, septimal neutral third", 128_f64 / 105_f64),
        ("Undecimal neutral third", 11_f64 / 9_f64),
        ("Equal-tempered neutral third", (2_f64).powf(7_f64 / 24_f64)),
        ("Zalzal's wosta 12:11 X 9:8", 27_f64 / 22_f64),
        ("Tridecimal neutral third", 16_f64 / 13_f64),
        ("Seventy-ninth harmonic", 79_f64 / 64_f64),
        ("Grave major third", 100_f64 / 81_f64),
        ("15 steps in 48 equal temperament", (2_f64).powf(5_f64 / 16_f64)),
        ("Pythagorean diminished fourth, Pythagorean 'schismatic' third", 8192_f64 / 6561_f64),
        ("Just major third, major third, quarter-comma meantone major third", 5_f64 / 4_f64),
        ("One-hundred-sixty-first harmonic", 161_f64 / 128_f64),
        ("Equal-tempered major third", (2_f64).powf(4_f64 / 12_f64)),
        ("Three-hundred-twenty-third harmonic", 323_f64 / 256_f64),
        ("Pythagorean major third, ditone", 81_f64 / 64_f64),
        ("Undecimal diminished fourth or major third", 14_f64 / 11_f64),
        ("17 steps in 48 equal temperament", (2_f64).powf(17_f64 / 48_f64)),
        ("Just diminished fourth, diminished fourth, 25th subharmonic", 32_f64 / 25_f64),
        ("Forty-first harmonic", 41_f64 / 32_f64),
        ("Septimal major third, Bohlen-Pierce third, Super major Third", 9_f64 / 7_f64),
        ("99th subharmonic", 128_f64 / 99_f64),
        ("9 steps in 24 equal temperament", (2_f64).powf(9_f64 / 24_f64)),
        ("Eighty-third harmonic", 83_f64 / 64_f64),
        ("Tridecimal major third or diminished fourth", 13_f64 / 10_f64),
        ("Just augmented third, augmented third", 125_f64 / 96_f64),
        ("49th subharmonic", 64_f64 / 49_f64),
        ("Twenty-first harmonic, narrow fourth, septimal fourth, wide augmented third, H7 on G", 21_f64 / 16_f64),
        ("19 steps in 48 equal temperament", (2_f64).powf(19_f64 / 48_f64)),
        ("Six-hundred-seventy-fifth harmonic, wide augmented third", 675_f64 / 512_f64),
        ("2 steps in 5 equal temperament", (2_f64).powf(2_f64 / 5_f64)),
        ("Eighty-fifth harmonic", 85_f64 / 64_f64),
        ("Perfect fourth, Pythagorean perfect fourth, Just perfect fourth or diatessaron", 4_f64 / 3_f64),
        ("Equal-tempered perfect fourth", (2_f64).powf(5_f64 / 12_f64)),
        ("One-hundred-seventy-first harmonic", 171_f64 / 128_f64),
        ("Beta scale perfect fourth", (3_f64 / 2_f64).powf(8_f64 / 11_f64)),
        ("Forty-third harmonic", 43_f64 / 32_f64),
        ("3 steps in 7 equal temperament", (2_f64).powf(3_f64 / 7_f64)),
        ("5-limit wolf fourth, acute fourth, imperfect fourth", 27_f64 / 20_f64),
        ("Pythagorean augmented third (F+ (pitch))", 177147_f64 / 131072_f64),
        ("21 steps in 48 equal temperament", (2_f64).powf(7_f64 / 16_f64)),
        ("Eighty-seventh harmonic", 87_f64 / 64_f64),
        ("Undecimal augmented fourth", 15_f64 / 11_f64),
        ("11 steps in 24 equal temperament", (2_f64).powf(11_f64 / 24_f64)),
        ("eleventh harmonic, undecimal tritone, lesser undecimal tritone, undecimal semi-augmented fourth", 11_f64 / 8_f64),
        ("Tridecimal augmented fourth", 18_f64 / 13_f64),
        ("Just augmented fourth", 25_f64 / 18_f64),
        ("Eighty-ninth harmonic", 89_f64 / 64_f64),
        ("23 steps in 48 equal temperament", (2_f64).powf(23_f64 / 48_f64)),
        ("Lesser septimal tritone, septimal tritone Huygens' tritone or Bohlen-Pierce fourth, septimal fifth, septimal diminished fifth", 7_f64 / 5_f64),
        ("Pythagorean diminished fifth, low Pythagorean tritone", 1024_f64 / 729_f64),
        ("Just augmented fourth, just tritone, tritone, diatonic tritone, 'augmented' or 'false' fourth, high 5-limit tritone, 1⁄6-comma meantone augmented fourth", 45_f64 / 32_f64),
        ("Three-hundred-sixty-first harmonic", 361_f64 / 256_f64),
        ("Equal-tempered tritone", (2_f64).powf(1_f64 / 2_f64)),
        ("Ninety-first harmonic", 91_f64 / 64_f64),
        ("Just tritone, 2nd tritone, 'false' fifth, diminished fifth, low 5-limit tritone, 45th subharmonic", 64_f64 / 45_f64),
        ("Pythagorean tritone, Pythagorean augmented fourth, high Pythagorean tritone", 729_f64 / 512_f64),
        ("Greater septimal tritone, septimal tritone, Euler's tritone", 10_f64 / 7_f64),
        ("25 steps in 48 equal temperament", (2_f64).powf(25_f64 / 48_f64)),
        ("Twenty-third harmonic, classic diminished fifth", 23_f64 / 16_f64),
        ("Just diminished fifth", 36_f64 / 25_f64),
        ("Ninety-third harmonic", 93_f64 / 64_f64),
        ("` undecimal semi-diminished fifth", 16_f64 / 11_f64),
        ("13 steps in 24 equal temperament", (2_f64).powf(13_f64 / 24_f64)),
        ("Forty-seventh harmonic", 47_f64 / 32_f64),
        ("27 steps in 48 equal temperament", (2_f64).powf(9_f64 / 16_f64)),
        ("Pythagorean diminished sixth", 262144_f64 / 177147_f64),
        ("5-limit wolf fifth, or diminished sixth, grave fifth, imperfect fifth,", 40_f64 / 27_f64),
        ("Ninety-fifth harmonic", 95_f64 / 64_f64),
        ("12167th harmonic", 12167_f64 / 8192_f64),
        ("4 steps in 7 equal temperament", (2_f64).powf(4_f64 / 7_f64)),
        ("Half-comma meantone perfect fifth", 3_f64 / (2_f64 / (81_f64 / 80_f64).powf(1_f64 / 2_f64))),
        ("1⁄3-comma meantone perfect fifth", 3_f64 / (2_f64 / (81_f64 / 80_f64).powf(1_f64 / 3_f64))),
        ("2⁄7-comma meantone perfect fifth", 3_f64 / (2_f64 / (81_f64 / 80_f64).powf(2_f64 / 7_f64))),
        ("Quarter-comma meantone perfect fifth", 3_f64 / (2_f64 / (81_f64 / 80_f64).powf(1_f64 / 4_f64))),
        ("1⁄5-comma meantone perfect fifth", 3_f64 / (2_f64 / (81_f64 / 80_f64).powf(1_f64 / 5_f64))),
        ("1⁄6-comma meantone perfect fifth", 3_f64 / (2_f64 / (81_f64 / 80_f64).powf(1_f64 / 6_f64))),
        ("Equal-tempered perfect fifth", (2_f64).powf(7_f64 / 12_f64)),
        ("53-TET perfect fifth", (2_f64).powf(31_f64 / 53_f64)),
        ("Perfect fifth, Pythagorean perfect fifth, Just perfect fifth or diapente, fifth, Just fifth", 3_f64 / 2_f64),
        ("41-TET perfect fifth", (2_f64).powf(24_f64 / 41_f64)),
        ("29-TET perfect fifth", (2_f64).powf(17_f64 / 29_f64)),
        ("Ninety-seventh harmonic", 97_f64 / 64_f64),
        ("3 steps in 5 equal temperament", (2_f64).powf(3_f64 / 5_f64)),
        ("Narrow diminished sixth", 1024_f64 / 675_f64),
        ("29 steps in 48 equal temperament", (2_f64).powf(29_f64 / 48_f64)),
        ("21st subharmonic, septimal diminished sixth", 32_f64 / 21_f64),
        ("Three-hundred-ninety-first harmonic", 391_f64 / 256_f64),
        ("Forty-ninth harmonic", 49_f64 / 32_f64),
        ("Classic diminished sixth", 192_f64 / 125_f64),
        ("15 steps in 24 equal temperament", (2_f64).powf(15_f64 / 24_f64)),
        ("Ninety-ninth harmonic", 99_f64 / 64_f64),
        ("Septimal minor sixth", 14_f64 / 9_f64),
        ("Just augmented fifth", 25_f64 / 16_f64),
        ("31 steps in 48 equal temperament", (2_f64).powf(31_f64 / 48_f64)),
        ("Wallis product", std::f64::consts::PI / 2_f64),
        ("Undecimal minor sixth, undecimal augmented fifth, Lucas numbers", 11_f64 / 7_f64),
        ("Hundred-first harmonic", 101_f64 / 64_f64),
        ("Pythagorean minor sixth, 81st subharmonic", 128_f64 / 81_f64),
        ("Two-hundred-third harmonic", 203_f64 / 128_f64),
        ("Equal-tempered minor sixth", (2_f64).powf(8_f64 / 12_f64)),
        ("Fifty-first harmonic", 51_f64 / 32_f64),
        ("Just minor sixth", 8_f64 / 5_f64),
        ("Pythagorean augmented fifth, Pythagorean 'schismatic' sixth", 6561_f64 / 4096_f64),
        ("Hundred-third harmonic", 103_f64 / 64_f64),
        ("33 steps in 48 equal temperament", (2_f64).powf(11_f64 / 16_f64)),
        ("Two-hundred-seventh harmonic", 207_f64 / 128_f64),
        ("Golden ratio (833 cents scale) ", ((5_f64).powf(1_f64 / 2_f64) + 1_f64) / 2_f64),
        ("Acute minor sixth", 81_f64 / 50_f64),
        ("Tridecimal neutral sixth, overtone sixth, thirteenth harmonic", 13_f64 / 8_f64),
        ("Two-hundred-ninth harmonic", 209_f64 / 128_f64),
        ("Equal-tempered neutral sixth", (2_f64).powf(17_f64 / 24_f64)),
        ("Undecimal neutral sixth, Zalzal's neutral sixth", 18_f64 / 11_f64),
        ("Hundred-fifth harmonic", 105_f64 / 64_f64),
        ("5 steps in 7 equal temperament", (2_f64).powf(5_f64 / 7_f64)),
        ("Grave major sixth", 400_f64 / 243_f64),
        ("Fifty-third harmonic", 53_f64 / 32_f64),
        ("35 steps in 48 equal temperament", (2_f64).powf(35_f64 / 48_f64)),
        ("77th subharmonic", 128_f64 / 77_f64),
        ("Pythagorean diminished seventh", 32768_f64 / 19683_f64),
        ("Just major sixth, Bohlen-Pierce sixth, 1⁄3-comma meantone major sixth", 5_f64 / 3_f64),
        ("Hundred-seventh harmonic", 107_f64 / 64_f64),
        ("6859th harmonic", 6859_f64 / 4096_f64),
        ("Equal-tempered major sixth", (2_f64).powf(9_f64 / 12_f64)),
        ("19th subharmonic", 32_f64 / 19_f64),
        ("Pythagorean major sixth", 27_f64 / 16_f64),
        ("Hundred-ninth harmonic", 109_f64 / 64_f64),
        ("37 steps in 48 equal temperament", (2_f64).powf(37_f64 / 48_f64)),
        ("Just diminished seventh, diminished seventh, 75th subharmonic", 128_f64 / 75_f64),
        ("Four-hundred-thirty-seventh harmonic", 437_f64 / 256_f64),
        ("Septimal major sixth", 12_f64 / 7_f64),
        ("Fifty-fifth harmonic", 55_f64 / 32_f64),
        ("19 steps in 24 equal temperament", (2_f64).powf(19_f64 / 24_f64)),
        ("Hundred-eleventh harmonic", 111_f64 / 64_f64),
        ("Just augmented sixth", 125_f64 / 72_f64),
        ("15 steps in Beta scale", (3_f64 / 2_f64).powf(15_f64 / 11_f64)),
        ("4 steps in 5 equal temperament", (2_f64).powf(4_f64 / 5_f64)),
        ("Septimal minor seventh, harmonic seventh, augmented sixth", 7_f64 / 4_f64),
        ("39 steps in 48 equal temperament", (2_f64).powf(13_f64 / 16_f64)),
        ("Just augmented sixth", 225_f64 / 128_f64),
        ("Hundred-thirteenth harmonic", 113_f64 / 64_f64),
        ("Pythagorean minor seventh, Small just minor seventh, lesser minor seventh, just minor seventh, Pythagorean small minor seventh", 16_f64 / 9_f64),
        ("Fifty-seventh harmonic", 57_f64 / 32_f64),
        ("Equal-tempered minor seventh", (2_f64).powf(10_f64 / 12_f64)),
        ("Hundred-fifteenth harmonic", 115_f64 / 64_f64),
        ("Greater just minor seventh, large just minor seventh, Bohlen-Pierce seventh", 9_f64 / 5_f64),
        ("Pythagorean augmented sixth", 59049_f64 / 32768_f64),
        ("41 steps in 48 equal temperament", (2_f64).powf(41_f64 / 48_f64)),
        ("6 steps in 7 equal temperament", (2_f64).powf(6_f64 / 7_f64)),
        ("Twenty-ninth harmonic, minor seventh", 29_f64 / 16_f64),
        ("Lesser undecimal neutral seventh, large minor seventh", 20_f64 / 11_f64),
        ("Acute minor seventh", 729_f64 / 400_f64),
        ("Hundred-seventeenth harmonic", 117_f64 / 64_f64),
        ("35th subharmonic, septimal neutral seventh", 64_f64 / 35_f64),
        ("21⁄4-tone or Undecimal neutral seventh, undecimal 'median' seventh", 11_f64 / 6_f64),
        ("Equal-tempered neutral seventh", (2_f64).powf(21_f64 / 24_f64)),
        ("Fifty-ninth harmonic", 59_f64 / 32_f64),
        ("Grave major seventh", 50_f64 / 27_f64),
        ("Tridecimal neutral seventh", 13_f64 / 7_f64),
        ("Hundred-nineteenth harmonic", 119_f64 / 64_f64),
        ("43 steps in 48 equal temperament", (2_f64).powf(43_f64 / 48_f64)),
        ("Pythagorean diminished octave", 4096_f64 / 2187_f64),
        ("Just major seventh, small just major seventh, 1⁄6-comma meantone major seventh", 15_f64 / 8_f64),
        ("17th subharmonic", 32_f64 / 17_f64),
        ("Equal-tempered major seventh", (2_f64).powf(11_f64 / 12_f64)),
        ("Hundred-twenty-first harmonic", 121_f64 / 64_f64),
        ("Octave - major chroma, 135th subharmonic, narrow diminished octave", 256_f64 / 135_f64),
        ("Pythagorean major seventh", 243_f64 / 128_f64),
        ("Sixty-first harmonic", 61_f64 / 32_f64),
        ("45 steps in 48 equal temperament", (2_f64).powf(15_f64 / 16_f64)),
        ("Classic diminished octave, large just major seventh", 48_f64 / 25_f64),
        ("Hundred-twenty-third harmonic", 123_f64 / 64_f64),
        ("Septimal major seventh", 27_f64 / 14_f64),
        ("Two-hundred-forty-seventh harmonic", 247_f64 / 128_f64),
        ("Thirty-first harmonic, augmented seventh", 31_f64 / 16_f64),
        ("33rd subharmonic", 64_f64 / 33_f64),
        ("23 steps in 24 equal temperament", (2_f64).powf(23_f64 / 24_f64)),
        ("Septimal supermajor seventh, septimal quarter tone inverted ", 35_f64 / 18_f64),
        ("Just augmented seventh, 125th harmonic", 125_f64 / 64_f64),
        ("Sixty-third harmonic", 63_f64 / 32_f64),
        ("47 steps in 48 equal temperament", (2_f64).powf(47_f64 / 48_f64)),
        ("Octave - syntonic comma, semi-diminished octave", 160_f64 / 81_f64),
        ("Two-hundred-fifty-third harmonic", 253_f64 / 128_f64),
        ("Hundred-twenty-seventh harmonic", 127_f64 / 64_f64),
        ("Octave or diapason", 2_f64),
    ];
}
